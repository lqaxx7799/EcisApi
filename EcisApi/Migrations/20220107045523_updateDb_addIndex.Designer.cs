// <auto-generated />
using System;
using EcisApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EcisApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220107045523_updateDb_addIndex")]
    partial class updateDb_addIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EcisApi.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("RoleId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("EcisApi.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("EcisApi.Models.AgentAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("AgentAssignment");
                });

            modelBuilder.Entity("EcisApi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyNameEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNameVI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("CompanyCode");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignedAgentId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyReportTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HandledAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandled")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("TargetedCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VerificationProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.HasIndex("CompanyReportTypeId");

                    b.HasIndex("CreatorCompanyId");

                    b.HasIndex("TargetedCompanyId");

                    b.HasIndex("VerificationProcessId");

                    b.HasIndex("Status", "IsDeleted");

                    b.ToTable("CompanyReport");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReportDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocumentSize")
                        .HasColumnType("bigint");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyReportId");

                    b.ToTable("CompanyReportDocument");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CompanyReportTypes");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyTypeModification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AnnouncedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAnnounced")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Modification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousCompanyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedCompanyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("VerificationProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("ViolationReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyReportId");

                    b.HasIndex("PreviousCompanyTypeId");

                    b.HasIndex("UpdatedCompanyTypeId");

                    b.HasIndex("VerificationProcessId");

                    b.HasIndex("ViolationReportId");

                    b.ToTable("CompanyTypeModification");
                });

            modelBuilder.Entity("EcisApi.Models.Criteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriteriaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CriteriaTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaTypeId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("EcisApi.Models.CriteriaDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriteriaDetailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaId");

                    b.ToTable("CriteriaDetail");
                });

            modelBuilder.Entity("EcisApi.Models.CriteriaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CriteriaTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CriteriaType");
                });

            modelBuilder.Entity("EcisApi.Models.DocumentReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VerificationDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerificationDocumentId");

                    b.ToTable("DocumentReview");
                });

            modelBuilder.Entity("EcisApi.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("EcisApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("EcisApi.Models.SystemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigurationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigurationValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SystemConfiguration");
                });

            modelBuilder.Entity("EcisApi.Models.ThirdParty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("ThirdParty");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationConfirmDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocumentSize")
                        .HasColumnType("bigint");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VerificationConfirmRequirementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerificationConfirmRequirementId");

                    b.ToTable("VerificationConfirmDocument");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationConfirmRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnnounceAgentDocumentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AnnouncedAgentAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AnnouncedCompanyAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedAgentId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmCompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmDocumentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ConfirmedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduledLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VerificationCriteriaId")
                        .HasColumnType("int");

                    b.Property<int?>("VerificationProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.HasIndex("ConfirmCompanyTypeId");

                    b.HasIndex("VerificationCriteriaId");

                    b.HasIndex("VerificationProcessId");

                    b.ToTable("VerificationConfirmRequirement");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyOpinion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CompanyRate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CriteriaDetailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReviewComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VerificationProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CriteriaDetailId");

                    b.HasIndex("VerificationProcessId");

                    b.ToTable("VerificationCriteria");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ResourceSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploaderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerificationCriteriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VerificationCriteriaId");

                    b.ToTable("VerificationDocument");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedAgentId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpenedByAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmitDeadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubmitMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignedAgentId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("VerificationProcess");
                });

            modelBuilder.Entity("EcisApi.Models.ViolationReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ReportAgentId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ReportAgentId");

                    b.ToTable("ViolationReport");
                });

            modelBuilder.Entity("EcisApi.Models.ViolationReportDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DocumentSize")
                        .HasColumnType("bigint");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ViolationReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViolationReportId");

                    b.ToTable("ViolationReportDocument");
                });

            modelBuilder.Entity("EcisApi.Models.Account", b =>
                {
                    b.HasOne("EcisApi.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EcisApi.Models.Agent", b =>
                {
                    b.HasOne("EcisApi.Models.Account", "Account")
                        .WithOne("Agent")
                        .HasForeignKey("EcisApi.Models.Agent", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EcisApi.Models.AgentAssignment", b =>
                {
                    b.HasOne("EcisApi.Models.Agent", "Agent")
                        .WithMany("AgentAssignments")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcisApi.Models.Province", "Province")
                        .WithMany("AgentAssignments")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EcisApi.Models.Company", b =>
                {
                    b.HasOne("EcisApi.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("EcisApi.Models.Company", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcisApi.Models.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId");

                    b.HasOne("EcisApi.Models.Province", "Province")
                        .WithMany("Companies")
                        .HasForeignKey("ProvinceId");

                    b.Navigation("Account");

                    b.Navigation("CompanyType");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReport", b =>
                {
                    b.HasOne("EcisApi.Models.Agent", "AssignedAgent")
                        .WithMany("CompanyActions")
                        .HasForeignKey("AssignedAgentId");

                    b.HasOne("EcisApi.Models.CompanyReportType", "CompanyReportType")
                        .WithMany("CompanyReports")
                        .HasForeignKey("CompanyReportTypeId");

                    b.HasOne("EcisApi.Models.Company", "CreatorCompany")
                        .WithMany("CreatorCompanyReports")
                        .HasForeignKey("CreatorCompanyId");

                    b.HasOne("EcisApi.Models.Company", "TargetedCompany")
                        .WithMany("TargetedCompanyReports")
                        .HasForeignKey("TargetedCompanyId");

                    b.HasOne("EcisApi.Models.VerificationProcess", "VerificationProcess")
                        .WithMany("CompanyReports")
                        .HasForeignKey("VerificationProcessId");

                    b.Navigation("AssignedAgent");

                    b.Navigation("CompanyReportType");

                    b.Navigation("CreatorCompany");

                    b.Navigation("TargetedCompany");

                    b.Navigation("VerificationProcess");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReportDocument", b =>
                {
                    b.HasOne("EcisApi.Models.CompanyReport", "CompanyReport")
                        .WithMany("CompanyReportDocuments")
                        .HasForeignKey("CompanyReportId");

                    b.Navigation("CompanyReport");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyTypeModification", b =>
                {
                    b.HasOne("EcisApi.Models.Company", "Company")
                        .WithMany("CompanyTypeModifications")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EcisApi.Models.CompanyReport", "CompanyReport")
                        .WithMany("CompanyTypeModifications")
                        .HasForeignKey("CompanyReportId");

                    b.HasOne("EcisApi.Models.CompanyType", "PreviousCompanyType")
                        .WithMany("PreviousCompanyTypeModifications")
                        .HasForeignKey("PreviousCompanyTypeId");

                    b.HasOne("EcisApi.Models.CompanyType", "UpdatedCompanyType")
                        .WithMany("UpdatedCompanyTypeModifications")
                        .HasForeignKey("UpdatedCompanyTypeId");

                    b.HasOne("EcisApi.Models.VerificationProcess", "VerificationProcess")
                        .WithMany("CompanyTypeModifications")
                        .HasForeignKey("VerificationProcessId");

                    b.HasOne("EcisApi.Models.ViolationReport", "ViolationReport")
                        .WithMany()
                        .HasForeignKey("ViolationReportId");

                    b.Navigation("Company");

                    b.Navigation("CompanyReport");

                    b.Navigation("PreviousCompanyType");

                    b.Navigation("UpdatedCompanyType");

                    b.Navigation("VerificationProcess");

                    b.Navigation("ViolationReport");
                });

            modelBuilder.Entity("EcisApi.Models.Criteria", b =>
                {
                    b.HasOne("EcisApi.Models.CriteriaType", "CriteriaType")
                        .WithMany("Criterias")
                        .HasForeignKey("CriteriaTypeId");

                    b.Navigation("CriteriaType");
                });

            modelBuilder.Entity("EcisApi.Models.CriteriaDetail", b =>
                {
                    b.HasOne("EcisApi.Models.Criteria", "Criteria")
                        .WithMany("CriteriaDetails")
                        .HasForeignKey("CriteriaId");

                    b.Navigation("Criteria");
                });

            modelBuilder.Entity("EcisApi.Models.DocumentReview", b =>
                {
                    b.HasOne("EcisApi.Models.VerificationDocument", "VerificationDocument")
                        .WithMany("DocumentReviews")
                        .HasForeignKey("VerificationDocumentId");

                    b.Navigation("VerificationDocument");
                });

            modelBuilder.Entity("EcisApi.Models.ThirdParty", b =>
                {
                    b.HasOne("EcisApi.Models.Account", "Account")
                        .WithOne("ThirdParty")
                        .HasForeignKey("EcisApi.Models.ThirdParty", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationConfirmDocument", b =>
                {
                    b.HasOne("EcisApi.Models.VerificationConfirmRequirement", "VerificationConfirmRequirement")
                        .WithMany("VerificationConfirmDocuments")
                        .HasForeignKey("VerificationConfirmRequirementId");

                    b.Navigation("VerificationConfirmRequirement");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationConfirmRequirement", b =>
                {
                    b.HasOne("EcisApi.Models.Agent", "AssignedAgent")
                        .WithMany("VerificationConfirmRequirements")
                        .HasForeignKey("AssignedAgentId");

                    b.HasOne("EcisApi.Models.CompanyType", "ConfirmCompanyType")
                        .WithMany("VerificationConfirmRequirements")
                        .HasForeignKey("ConfirmCompanyTypeId");

                    b.HasOne("EcisApi.Models.VerificationCriteria", "VerificationCriteria")
                        .WithMany("VerificationConfirmRequirements")
                        .HasForeignKey("VerificationCriteriaId");

                    b.HasOne("EcisApi.Models.VerificationProcess", "VerificationProcess")
                        .WithMany("VerificationConfirmRequirements")
                        .HasForeignKey("VerificationProcessId");

                    b.Navigation("AssignedAgent");

                    b.Navigation("ConfirmCompanyType");

                    b.Navigation("VerificationCriteria");

                    b.Navigation("VerificationProcess");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationCriteria", b =>
                {
                    b.HasOne("EcisApi.Models.CriteriaDetail", "CriteriaDetail")
                        .WithMany("VerificationCriterias")
                        .HasForeignKey("CriteriaDetailId");

                    b.HasOne("EcisApi.Models.VerificationProcess", "VerificationProcess")
                        .WithMany("VerificationCriterias")
                        .HasForeignKey("VerificationProcessId");

                    b.Navigation("CriteriaDetail");

                    b.Navigation("VerificationProcess");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationDocument", b =>
                {
                    b.HasOne("EcisApi.Models.VerificationCriteria", "VerificationCriteria")
                        .WithMany("VerificationDocuments")
                        .HasForeignKey("VerificationCriteriaId");

                    b.Navigation("VerificationCriteria");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationProcess", b =>
                {
                    b.HasOne("EcisApi.Models.Agent", "AssignedAgent")
                        .WithMany("VerificationProcesses")
                        .HasForeignKey("AssignedAgentId");

                    b.HasOne("EcisApi.Models.Company", "Company")
                        .WithMany("VerificationProcesses")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EcisApi.Models.CompanyType", "CompanyType")
                        .WithMany("VerificationProcesses")
                        .HasForeignKey("CompanyTypeId");

                    b.Navigation("AssignedAgent");

                    b.Navigation("Company");

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("EcisApi.Models.ViolationReport", b =>
                {
                    b.HasOne("EcisApi.Models.Company", "Company")
                        .WithMany("ViolationReports")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EcisApi.Models.Agent", "ReportAgent")
                        .WithMany("ViolationReports")
                        .HasForeignKey("ReportAgentId");

                    b.Navigation("Company");

                    b.Navigation("ReportAgent");
                });

            modelBuilder.Entity("EcisApi.Models.ViolationReportDocument", b =>
                {
                    b.HasOne("EcisApi.Models.ViolationReport", "ViolationReport")
                        .WithMany("ViolationReportDocuments")
                        .HasForeignKey("ViolationReportId");

                    b.Navigation("ViolationReport");
                });

            modelBuilder.Entity("EcisApi.Models.Account", b =>
                {
                    b.Navigation("Agent");

                    b.Navigation("Company");

                    b.Navigation("ThirdParty");
                });

            modelBuilder.Entity("EcisApi.Models.Agent", b =>
                {
                    b.Navigation("AgentAssignments");

                    b.Navigation("CompanyActions");

                    b.Navigation("VerificationConfirmRequirements");

                    b.Navigation("VerificationProcesses");

                    b.Navigation("ViolationReports");
                });

            modelBuilder.Entity("EcisApi.Models.Company", b =>
                {
                    b.Navigation("CompanyTypeModifications");

                    b.Navigation("CreatorCompanyReports");

                    b.Navigation("TargetedCompanyReports");

                    b.Navigation("VerificationProcesses");

                    b.Navigation("ViolationReports");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReport", b =>
                {
                    b.Navigation("CompanyReportDocuments");

                    b.Navigation("CompanyTypeModifications");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyReportType", b =>
                {
                    b.Navigation("CompanyReports");
                });

            modelBuilder.Entity("EcisApi.Models.CompanyType", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("PreviousCompanyTypeModifications");

                    b.Navigation("UpdatedCompanyTypeModifications");

                    b.Navigation("VerificationConfirmRequirements");

                    b.Navigation("VerificationProcesses");
                });

            modelBuilder.Entity("EcisApi.Models.Criteria", b =>
                {
                    b.Navigation("CriteriaDetails");
                });

            modelBuilder.Entity("EcisApi.Models.CriteriaDetail", b =>
                {
                    b.Navigation("VerificationCriterias");
                });

            modelBuilder.Entity("EcisApi.Models.CriteriaType", b =>
                {
                    b.Navigation("Criterias");
                });

            modelBuilder.Entity("EcisApi.Models.Province", b =>
                {
                    b.Navigation("AgentAssignments");

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("EcisApi.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationConfirmRequirement", b =>
                {
                    b.Navigation("VerificationConfirmDocuments");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationCriteria", b =>
                {
                    b.Navigation("VerificationConfirmRequirements");

                    b.Navigation("VerificationDocuments");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationDocument", b =>
                {
                    b.Navigation("DocumentReviews");
                });

            modelBuilder.Entity("EcisApi.Models.VerificationProcess", b =>
                {
                    b.Navigation("CompanyReports");

                    b.Navigation("CompanyTypeModifications");

                    b.Navigation("VerificationConfirmRequirements");

                    b.Navigation("VerificationCriterias");
                });

            modelBuilder.Entity("EcisApi.Models.ViolationReport", b =>
                {
                    b.Navigation("ViolationReportDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
